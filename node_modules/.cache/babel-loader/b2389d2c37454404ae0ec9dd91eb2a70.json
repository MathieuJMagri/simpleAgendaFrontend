{"ast":null,"code":"var _jsxFileName = \"/Users/mathieujmagri/git/ECSE428_Project_Frontend/src/components/Task.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { FaTimes, FaPen, FaSave, FaUndoAlt } from \"react-icons/fa\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Task = ({\n  task,\n  onDelete,\n  editMode,\n  setTaskToEdit,\n  onEdit,\n  courseList\n}) => {\n  _s();\n\n  const [name, setName] = useState(task.name);\n  const [course, setCourse] = useState(task.course);\n\n  function handleChangeName(event) {\n    setName(event.target.value);\n  }\n\n  function handleChangeCourse(event) {\n    setCourse(event.target.value);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `task ${task.reminder && \"reminder\"}`,\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [editMode ? /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: name,\n        onChange: handleChangeName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }, this) : name, \" \", task.toggleMode, !editMode && /*#__PURE__*/_jsxDEV(FaPen, {\n        \"data-testid\": \"edit task\",\n        onClick: () => setTaskToEdit(task.id)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this), editMode && /*#__PURE__*/_jsxDEV(FaSave, {\n        \"data-testid\": \"save task\",\n        onClick: () => {\n          if (onEdit(name, course)) {\n            setTaskToEdit(-1);\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this), editMode && /*#__PURE__*/_jsxDEV(FaUndoAlt, {\n        \"data-testid\": \"edit task\",\n        onClick: () => {\n          setTaskToEdit(-1);\n          setName(task.name);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(FaTimes, {\n        \"data-testid\": \"delete task\",\n        style: {\n          color: \"red\",\n          cursor: \"pointer\"\n        },\n        onClick: () => onDelete(task.id)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: editMode ? /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"courses\",\n        id: \"courses\",\n        value: course,\n        onChange: handleChangeCourse,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this), courseList.map(course => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: course.code,\n          children: [course.code, \": \", course.name]\n        }, course.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this) : course\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: task.day\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Task, \"mfKsFGaUba5RkZkGZnR3SQ4iWbg=\");\n\n_c = Task;\nexport default Task;\n\nvar _c;\n\n$RefreshReg$(_c, \"Task\");","map":{"version":3,"sources":["/Users/mathieujmagri/git/ECSE428_Project_Frontend/src/components/Task.js"],"names":["useState","FaTimes","FaPen","FaSave","FaUndoAlt","Task","task","onDelete","editMode","setTaskToEdit","onEdit","courseList","name","setName","course","setCourse","handleChangeName","event","target","value","handleChangeCourse","reminder","toggleMode","id","color","cursor","map","code","day"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\r\nimport { FaTimes, FaPen, FaSave, FaUndoAlt } from \"react-icons/fa\";\r\n\r\nconst Task = ({\r\n  task,\r\n  onDelete,\r\n  editMode,\r\n  setTaskToEdit,\r\n  onEdit,\r\n  courseList,\r\n}) => {\r\n  const [name, setName] = useState(task.name);\r\n  const [course, setCourse] = useState(task.course);\r\n  function handleChangeName(event) {\r\n    setName(event.target.value);\r\n  }\r\n  function handleChangeCourse(event) {\r\n    setCourse(event.target.value);\r\n  }\r\n\r\n  return (\r\n    <div className={`task ${task.reminder && \"reminder\"}`}>\r\n      <h3>\r\n        {editMode ? (\r\n          <input type=\"text\" value={name} onChange={handleChangeName} />\r\n        ) : (\r\n          name\r\n        )}{\" \"}\r\n        {task.toggleMode}\r\n        {!editMode && (\r\n          <FaPen\r\n            data-testid=\"edit task\"\r\n            onClick={() => setTaskToEdit(task.id)}\r\n          />\r\n        )}\r\n        {editMode && (\r\n          <FaSave\r\n            data-testid=\"save task\"\r\n            onClick={() => {\r\n              if (onEdit(name, course)) {\r\n                setTaskToEdit(-1);\r\n              }\r\n            }}\r\n          />\r\n        )}\r\n        {editMode && (\r\n          <FaUndoAlt\r\n            data-testid=\"edit task\"\r\n            onClick={() => {\r\n              setTaskToEdit(-1);\r\n              setName(task.name);\r\n            }}\r\n          />\r\n        )}\r\n        <FaTimes\r\n          data-testid=\"delete task\"\r\n          style={{ color: \"red\", cursor: \"pointer\" }}\r\n          onClick={() => onDelete(task.id)}\r\n        />\r\n      </h3>\r\n      <p>\r\n        {editMode ? (\r\n          <select\r\n            name=\"courses\"\r\n            id=\"courses\"\r\n            value={course}\r\n            onChange={handleChangeCourse}\r\n          >\r\n            <option value=\"\"></option>\r\n            {courseList.map((course) => (\r\n              <option value={course.code} key={course.id}>\r\n                {course.code}: {course.name}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        ) : (\r\n          course\r\n        )}\r\n      </p>\r\n      <p>{task.day}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Task;\r\n"]},"metadata":{},"sourceType":"module"}