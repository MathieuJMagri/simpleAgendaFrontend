{"ast":null,"code":"var _jsxFileName = \"/Users/mathieujmagri/git/ECSE428_Project_Frontend/src/components/Task.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { FaTimes, FaPen, FaSave, FaUndoAlt, FaRegCheckSquare, FaRegSquare } from \"react-icons/fa\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Task = ({\n  task,\n  onDelete,\n  editMode,\n  setTaskToEdit,\n  onEdit,\n  onEditStatus,\n  courses\n}) => {\n  _s();\n\n  const [name, setName] = useState(task.name);\n  const [course, setCourse] = useState(task.course);\n  const [day, setDay] = useState(task.day);\n  const [status, setStatus] = useState(task.status === \"COMPLETED\");\n\n  function handleChangeName(event) {\n    setName(event.target.value);\n  }\n\n  function handleChangeCourse(event) {\n    setCourse(event.target.value);\n  }\n\n  function handleChangeDay(event) {\n    setDay(event.target.value);\n  }\n\n  async function handleStatus() {\n    await onEditStatus(task._id, !status ? \"COMPLETED\" : \"INCOMPLETE\");\n    setStatus(!status);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `task ${task.reminder && \"reminder\"}`,\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [status ? /*#__PURE__*/_jsxDEV(FaRegCheckSquare, {\n        \"data-testid\": \"uncheck task\",\n        style: {\n          color: \"green\"\n        },\n        onClick: handleStatus\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(FaRegSquare, {\n        \"data-testid\": \"check task\",\n        onClick: handleStatus\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this), !editMode ?\n      /*#__PURE__*/\n      // Task name, edit\n      _jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(FaPen, {\n          \"data-testid\": \"edit task\",\n          onClick: () => setTaskToEdit(task._id)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) :\n      /*#__PURE__*/\n      // Task name input field, save, undo\n      _jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: name,\n          onChange: handleChangeName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(FaSave, {\n          \"data-testid\": \"save task\",\n          onClick: async () => {\n            if (await onEdit(name, course, day)) {\n              setTaskToEdit(-1);\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(FaUndoAlt, {\n          \"data-testid\": \"cancel edit task\",\n          onClick: () => {\n            setTaskToEdit(-1);\n            setName(task.name);\n            setCourse(task.course);\n            setDay(task.day);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true), \" \", /*#__PURE__*/_jsxDEV(FaTimes, {\n        \"data-testid\": \"delete task\",\n        style: {\n          color: \"red\",\n          cursor: \"pointer\"\n        },\n        onClick: () => onDelete(task._id)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: !editMode ? course : /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"courses\",\n        id: \"courses\",\n        value: course,\n        onChange: handleChangeCourse,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }, this), courses.map(course => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: course.code,\n          children: [course.code, \": \", course.name]\n        }, course._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: !editMode ? day : /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"datetime-local\",\n        placeholder: \"Add Deadline\",\n        value: day,\n        onChange: handleChangeDay,\n        \"data-testid\": \"edit date\",\n        className: \"edit-date\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Task, \"a+bR7KDzDc2UOB2HE1Lllp2FDBU=\");\n\n_c = Task;\nexport default Task;\n\nvar _c;\n\n$RefreshReg$(_c, \"Task\");","map":{"version":3,"sources":["/Users/mathieujmagri/git/ECSE428_Project_Frontend/src/components/Task.js"],"names":["useState","FaTimes","FaPen","FaSave","FaUndoAlt","FaRegCheckSquare","FaRegSquare","Task","task","onDelete","editMode","setTaskToEdit","onEdit","onEditStatus","courses","name","setName","course","setCourse","day","setDay","status","setStatus","handleChangeName","event","target","value","handleChangeCourse","handleChangeDay","handleStatus","_id","reminder","color","cursor","map","code"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\r\nimport {\r\n  FaTimes,\r\n  FaPen,\r\n  FaSave,\r\n  FaUndoAlt,\r\n  FaRegCheckSquare,\r\n  FaRegSquare,\r\n} from \"react-icons/fa\";\r\n\r\nconst Task = ({\r\n  task,\r\n  onDelete,\r\n  editMode,\r\n  setTaskToEdit,\r\n  onEdit,\r\n  onEditStatus,\r\n  courses,\r\n}) => {\r\n  const [name, setName] = useState(task.name);\r\n  const [course, setCourse] = useState(task.course);\r\n  const [day, setDay] = useState(task.day);\r\n  const [status, setStatus] = useState(task.status === \"COMPLETED\");\r\n\r\n  function handleChangeName(event) {\r\n    setName(event.target.value);\r\n  }\r\n  function handleChangeCourse(event) {\r\n    setCourse(event.target.value);\r\n  }\r\n  function handleChangeDay(event) {\r\n    setDay(event.target.value);\r\n  }\r\n  async function handleStatus() {\r\n    await onEditStatus(task._id, !status ? \"COMPLETED\" : \"INCOMPLETE\");\r\n    setStatus(!status);\r\n  }\r\n\r\n  return (\r\n    <div className={`task ${task.reminder && \"reminder\"}`}>\r\n      <h3>\r\n        {/* Checkbox */}\r\n        {status ? (\r\n          <FaRegCheckSquare\r\n            data-testid=\"uncheck task\"\r\n            style={{ color: \"green\" }}\r\n            onClick={handleStatus}\r\n          />\r\n        ) : (\r\n          <FaRegSquare data-testid=\"check task\" onClick={handleStatus} />\r\n        )}\r\n        {!editMode ? (\r\n          // Task name, edit\r\n          <>\r\n            <span>{name}</span>\r\n            <FaPen\r\n              data-testid=\"edit task\"\r\n              onClick={() => setTaskToEdit(task._id)}\r\n            />\r\n          </>\r\n        ) : (\r\n          // Task name input field, save, undo\r\n          <>\r\n            <input type=\"text\" value={name} onChange={handleChangeName} />\r\n            <FaSave\r\n              data-testid=\"save task\"\r\n              onClick={async () => {\r\n                if (await onEdit(name, course, day)) {\r\n                  setTaskToEdit(-1);\r\n                }\r\n              }}\r\n            />\r\n            <FaUndoAlt\r\n              data-testid=\"cancel edit task\"\r\n              onClick={() => {\r\n                setTaskToEdit(-1);\r\n                setName(task.name);\r\n                setCourse(task.course);\r\n                setDay(task.day);\r\n              }}\r\n            />\r\n          </>\r\n        )}{\" \"}\r\n        {/* Delete */}\r\n        <FaTimes\r\n          data-testid=\"delete task\"\r\n          style={{ color: \"red\", cursor: \"pointer\" }}\r\n          onClick={() => onDelete(task._id)}\r\n        />\r\n      </h3>\r\n      <p>\r\n        {!editMode ? (\r\n          course\r\n        ) : (\r\n          <select\r\n            name=\"courses\"\r\n            id=\"courses\"\r\n            value={course}\r\n            onChange={handleChangeCourse}\r\n          >\r\n            <option value=\"\"></option>\r\n            {courses.map((course) => (\r\n              <option value={course.code} key={course._id}>\r\n                {course.code}: {course.name}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        )}\r\n      </p>\r\n      <p>\r\n        {!editMode ? (\r\n          day\r\n        ) : (\r\n          <input\r\n            type=\"datetime-local\"\r\n            placeholder=\"Add Deadline\"\r\n            value={day}\r\n            onChange={handleChangeDay}\r\n            data-testid=\"edit date\"\r\n            className=\"edit-date\"\r\n          />\r\n        )}\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Task;\r\n"]},"metadata":{},"sourceType":"module"}