{"ast":null,"code":"var _jsxFileName = \"/Users/mathieujmagri/git/ECSE428_Project_Frontend/src/App.js\",\n    _s = $RefreshSig$();\n\nimport Header from \"./components/Header\";\nimport { useState } from \"react\";\nimport TaskHeader from \"./components/TaskHeader\";\nimport TaskPopup from \"./components/TaskPopup\";\nimport AddTask from \"./components/AddTask\";\nimport CourseHeader from \"./components/CourseHeader\";\nimport CoursePopup from \"./components/CoursePopup\";\nimport AddCourse from \"./components/AddCourse\";\nimport CourseList from \"./components/CourseList\";\nimport Tasks from \"./components/Tasks\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [username, setUsername] = useState(\"Peiyong\"); // For AddTask\n\n  const [tasks, setTasks] = useState([]);\n  const [showAddTask, setShowAddTask] = useState(false);\n  const [taskToEdit, setTaskToEdit] = useState(-1); // value is task ID, -1 means no task to edit\n\n  const [showAddCourse, setShowAddCourse] = useState(false);\n  const [courseList, setCourseList] = useState([{\n    id: 1,\n    code: \"ECSE 428\",\n    name: \"Software Dev\",\n    term: \"Fall21\"\n  }]);\n\n  const addCourse = course => {\n    for (const existingCourse of courseList) {\n      if (course.code === existingCourse.code) {\n        alert(\"This course code already exists\");\n        return false;\n      }\n    }\n\n    const id = Math.floor(Math.random() * 10000) + 1;\n    const newCourse = {\n      id,\n      ...course\n    };\n    setCourseList([...courseList, newCourse]);\n    setShowAddCourse(!showAddCourse);\n    return true;\n  }; // Add Task\n\n\n  const addTask = task => {\n    const id = Math.floor(Math.random() * 10000) + 1;\n    const newTask = {\n      id,\n      ...task\n    };\n    setTasks([...tasks, newTask]);\n  }; // Edit Task\n\n\n  const editTask = newName => {\n    if (newName === \"\") {\n      alert(\"Please give a non-empty name\");\n      return false;\n    } else {\n      setTasks(tasks.map(task => task.id === taskToEdit ? { ...task,\n        text: newName\n      } : task));\n      return true;\n    }\n  }; // Delete Task\n\n\n  const deleteTask = id => {\n    setTasks(tasks.filter(task => task.id !== id));\n    alert(\"the task is deleted\");\n  }; // Delete Course\n\n\n  const deleteCourse = id => {\n    setCourseList(courseList.filter(course => course.id !== id));\n    setTaskToEdit(-1);\n    alert(\"the course is deleted\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      username: username\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      id: \"Task-Section\",\n      children: [/*#__PURE__*/_jsxDEV(AddTask, {\n        onAdd: addTask,\n        courseList: courseList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), tasks.length > 0 ? /*#__PURE__*/_jsxDEV(Tasks, {\n        tasks: tasks,\n        taskToEdit: taskToEdit,\n        setTaskToEdit: setTaskToEdit,\n        onEdit: editTask,\n        onDelete: deleteTask,\n        courseList: courseList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this) : \"No tasks to show\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      id: \"Course-Section\",\n      children: [/*#__PURE__*/_jsxDEV(CourseHeader, {\n        onAdd: () => setShowAddCourse(!showAddCourse),\n        showAdd: showAddCourse\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), showAddCourse && /*#__PURE__*/_jsxDEV(CoursePopup, {\n        content: /*#__PURE__*/_jsxDEV(AddCourse, {\n          onAdd: addCourse\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 22\n        }, this),\n        handleClose: () => setShowAddCourse(!showAddCourse)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(CourseList, {\n        courseList: courseList,\n        onDelete: deleteCourse\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(App, \"u9IKHGzx+phmlhklYd9f1B7RU48=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/mathieujmagri/git/ECSE428_Project_Frontend/src/App.js"],"names":["Header","useState","TaskHeader","TaskPopup","AddTask","CourseHeader","CoursePopup","AddCourse","CourseList","Tasks","App","username","setUsername","tasks","setTasks","showAddTask","setShowAddTask","taskToEdit","setTaskToEdit","showAddCourse","setShowAddCourse","courseList","setCourseList","id","code","name","term","addCourse","course","existingCourse","alert","Math","floor","random","newCourse","addTask","task","newTask","editTask","newName","map","text","deleteTask","filter","deleteCourse","length"],"mappings":"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","sourcesContent":["import Header from \"./components/Header\";\r\nimport { useState } from \"react\";\r\nimport TaskHeader from \"./components/TaskHeader\";\r\nimport TaskPopup from \"./components/TaskPopup\";\r\nimport AddTask from \"./components/AddTask\";\r\nimport CourseHeader from \"./components/CourseHeader\";\r\nimport CoursePopup from \"./components/CoursePopup\";\r\nimport AddCourse from \"./components/AddCourse\";\r\nimport CourseList from \"./components/CourseList\";\r\nimport Tasks from \"./components/Tasks\";\r\n\r\nconst App = () => {\r\n  const [username, setUsername] = useState(\"Peiyong\");\r\n\r\n  // For AddTask\r\n  const [tasks, setTasks] = useState([]);\r\n  const [showAddTask, setShowAddTask] = useState(false);\r\n  const [taskToEdit, setTaskToEdit] = useState(-1); // value is task ID, -1 means no task to edit\r\n\r\n  const [showAddCourse, setShowAddCourse] = useState(false);\r\n  const [courseList, setCourseList] = useState([\r\n    {\r\n      id: 1,\r\n      code: \"ECSE 428\",\r\n      name: \"Software Dev\",\r\n      term: \"Fall21\",\r\n    },\r\n  ]);\r\n\r\n  const addCourse = (course) => {\r\n    for (const existingCourse of courseList) {\r\n      if (course.code === existingCourse.code) {\r\n        alert(\"This course code already exists\");\r\n\r\n        return false;\r\n      }\r\n    }\r\n\r\n    const id = Math.floor(Math.random() * 10000) + 1;\r\n    const newCourse = { id, ...course };\r\n    setCourseList([...courseList, newCourse]);\r\n    setShowAddCourse(!showAddCourse);\r\n\r\n    return true;\r\n  };\r\n  // Add Task\r\n  const addTask = (task) => {\r\n    const id = Math.floor(Math.random() * 10000) + 1;\r\n    const newTask = { id, ...task };\r\n    setTasks([...tasks, newTask]);\r\n  };\r\n\r\n  // Edit Task\r\n  const editTask = (newName) => {\r\n    if (newName === \"\") {\r\n      alert(\"Please give a non-empty name\");\r\n\r\n      return false;\r\n    } else {\r\n      setTasks(\r\n        tasks.map((task) =>\r\n          task.id === taskToEdit ? { ...task, text: newName } : task\r\n        )\r\n      );\r\n\r\n      return true;\r\n    }\r\n  };\r\n\r\n  // Delete Task\r\n  const deleteTask = (id) => {\r\n    setTasks(tasks.filter((task) => task.id !== id));\r\n    alert(\"the task is deleted\");\r\n  };\r\n\r\n  // Delete Course\r\n  const deleteCourse = (id) => {\r\n    setCourseList(courseList.filter((course) => course.id !== id));\r\n    setTaskToEdit(-1);\r\n    alert(\"the course is deleted\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Header username={username} />\r\n      <section id=\"Task-Section\">\r\n        <AddTask onAdd={addTask} courseList={courseList} />\r\n        {tasks.length > 0 ? (\r\n          <Tasks\r\n            tasks={tasks}\r\n            taskToEdit={taskToEdit}\r\n            setTaskToEdit={setTaskToEdit}\r\n            onEdit={editTask}\r\n            onDelete={deleteTask}\r\n            courseList={courseList}\r\n          />\r\n        ) : (\r\n          \"No tasks to show\"\r\n        )}\r\n\r\n        {/* TODO: Add task list */}\r\n      </section>\r\n\r\n      <section id=\"Course-Section\">\r\n        <CourseHeader\r\n          onAdd={() => setShowAddCourse(!showAddCourse)}\r\n          showAdd={showAddCourse}\r\n        />\r\n        {showAddCourse && (\r\n          <CoursePopup\r\n            content={<AddCourse onAdd={addCourse} />}\r\n            handleClose={() => setShowAddCourse(!showAddCourse)}\r\n          />\r\n        )}\r\n        <CourseList courseList={courseList} onDelete={deleteCourse} />\r\n      </section>\r\n\r\n      <footer></footer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}